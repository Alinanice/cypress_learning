{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2021-03-25T14:41:36.385Z",
    "end": "2021-03-25T14:41:51.984Z",
    "duration": 15599,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "0d5a65a1-b580-4e5f-a321-2901d0e7d10e",
      "title": "",
      "fullFile": "cypress\\integration\\FirstTest.spec.js",
      "file": "cypress\\integration\\FirstTest.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7828d441-85ed-4179-b4de-8c2995c80e38",
          "title": "Test with Backend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify correct request and responce",
              "fullTitle": "Test with Backend verify correct request and responce",
              "timedOut": null,
              "duration": 5242,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', '**/articles').as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('This is a title');\ncy.get('[formcontrolname=\"description\"]').type('This is a description');\ncy.get('[formcontrolname=\"body\"]').type('This is a body of the Article');\ncy.contains('Publish Article').click();\ncy.wait('@postArticles');\ncy.get('@postArticles').then(function (xhr) {\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.body).to.equal('This is a body of the Article');\n  expect(xhr.response.body.article.description).to.equal('This is a description');\n});",
              "err": {},
              "uuid": "b8d1b90e-6921-4f9a-9b49-7638327f64ed",
              "parentUUID": "7828d441-85ed-4179-b4de-8c2995c80e38",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object",
              "fullTitle": "Test with Backend should gave tags with routing object",
              "timedOut": null,
              "duration": 1308,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.tag-list').should('contain', 'cypress').and('contain', 'automation').and('contain', 'testing');",
              "err": {},
              "uuid": "7575f74b-b68d-41d7-99c7-2401312d68ce",
              "parentUUID": "7828d441-85ed-4179-b4de-8c2995c80e38",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify global feed likes count",
              "fullTitle": "Test with Backend verify global feed likes count",
              "timedOut": null,
              "duration": 1655,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('GET', '**/articles/feed*', {\n  \"articles\": [],\n  \"articlesCount\": 0\n});\ncy.intercept('GET', '**/articles*', {\n  fixture: 'articles.json'\n});\ncy.contains('Global Feed').click();\ncy.get('app-article-list button').then(function (listOfButtons) {\n  expect(listOfButtons[0]).to.contain('1');\n  expect(listOfButtons[1]).to.contain('5');\n});\ncy.fixture('articles').then(function (file) {\n  var articlelink = file.articles[1].slug;\n  cy.intercept('POST', '**/articles/' + articlelink + '/favorite', file);\n});\ncy.get('app-article-list button').eq(1).click().should('contain', '6');",
              "err": {},
              "uuid": "347cabff-52cd-444a-bcee-268e4ba33c65",
              "parentUUID": "7828d441-85ed-4179-b4de-8c2995c80e38",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "intercepting and modifying the request and responce",
              "fullTitle": "Test with Backend intercepting and modifying the request and responce",
              "timedOut": null,
              "duration": 3039,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//cy.intercept('POST','**/articles',(req) => {\n//    req.body.article.description = \"This is a description 2\"\n//}).as('postArticles')\ncy.intercept('POST', '**/articles', function (req) {\n  req.reply(function (res) {\n    expect(res.body.article.description).to.equal('This is a description');\n    res.body.article.description = \"This is a description 2\";\n  });\n}).as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('This is a title');\ncy.get('[formcontrolname=\"description\"]').type('This is a description');\ncy.get('[formcontrolname=\"body\"]').type('This is a body of the Article');\ncy.contains('Publish Article').click();\ncy.wait('@postArticles');\ncy.get('@postArticles').then(function (xhr) {\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.body).to.equal('This is a body of the Article');\n  expect(xhr.response.body.article.description).to.equal('This is a description 2');\n});",
              "err": {},
              "uuid": "e66178e5-00c9-45be-b68c-40e0af6a73e1",
              "parentUUID": "7828d441-85ed-4179-b4de-8c2995c80e38",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "delete a new article in the global feed",
              "fullTitle": "Test with Backend delete a new article in the global feed",
              "timedOut": null,
              "duration": 3993,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var bodyRequest = {\n  \"article\": {\n    \"tagList\": [],\n    \"title\": \"Request from API\",\n    \"description\": \"API testing is easy\",\n    \"body\": \"Angular is cool\"\n  }\n};\ncy.get('@token').then(function (token) {\n  cy.request({\n    url: Cypress.env('apiUrl') + 'api/articles/',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    method: 'POST',\n    body: bodyRequest\n  }).then(function (response) {\n    expect(response.status).to.equal(200);\n  });\n  cy.contains('Global Feed').click();\n  cy.get('.article-preview').first().click();\n  cy.get('.article-actions').contains('Delete Article').click();\n  cy.request({\n    url: Cypress.env('apiUrl') + 'api/articles?limit=10&offset=0',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    method: 'GET'\n  }).its('body').then(function (body) {\n    expect(body.articles[0].title).not.to.equal('Request from API');\n  });\n});",
              "err": {},
              "uuid": "0db7fdf4-cd83-41ad-a6f9-592e35556256",
              "parentUUID": "7828d441-85ed-4179-b4de-8c2995c80e38",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b8d1b90e-6921-4f9a-9b49-7638327f64ed",
            "7575f74b-b68d-41d7-99c7-2401312d68ce",
            "347cabff-52cd-444a-bcee-268e4ba33c65",
            "e66178e5-00c9-45be-b68c-40e0af6a73e1",
            "0db7fdf4-cd83-41ad-a6f9-592e35556256"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15237,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}